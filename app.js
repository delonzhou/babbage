var yodlee = require('./yodlee');
var express = require('express');
var http = require('http');
var rio = require('rio');
var app = express();

function send_json(res, json) {
    res.setHeader('Content-Type', 'application/json');
    res.end(JSON.stringify(json));
}

app.configure(function() {
  // set ejs as view rendering engine
  app.set('view engine', 'ejs');
  app.set('views', __dirname+'/views');

  app.use(express.methodOverride());
  app.use(express.json());
  app.use(express.urlencoded());

  // serves frontend application
  app.use(express.static('public'));

  app.use(express.logger());
  app.use(app.router);

  app.use(express.errorHandler({
    dumpExceptions: true,
    showStack: true
  }));
});

app.get('/', function(req, res) {
	res.render('index');
});


app.get('/test', function(req, response) {
	var args = {
	    prods: ["IBM", "YHOO", "MSFT"]
	};
	rio.sourceAndEval(__dirname + "/ex2.R", {
	    entryPoint: "getOptimalPortfolio",
	    data: args,
	    callback: function displayResponse(err, res) {
		    var i;
		    if (!err) {
		        res = JSON.parse(res);
		        response.send("hello");
		        // Optimal weights: 0.27107,0.2688,0.46013
		    } else {
		        response.send("Optimization failed");
		    }
		}
	});
});

app.post('/api/login', function(req, res) {
    yodlee.getData(function(txns) {
        var dummy = {"date":[0,6,8,9,10,13,14,21,23,24,27,28,30,31,34,45,49,50,56,59,62,70,71,73,80,83,84,87,88,90,93,98,101,104,107,112,114,119,120,126,132,133,134,136,139,140,142,143,150,153,154,160,162,165,168,171,175,177,180,181,182,185,188,195,196,202,204,205,210,212,224,226,230,231,234,238,241,243,245,248,252,257,258,260,262,265,266,267,272,273,276,280,281,287,289,290,294,295,296,302,303,304,308,309,311],"predictedCashFlows":[-1877.7,70.0799999999908,-273.333333333333,287.753333333339,1300.00000000001,-336.999999999998,1302.435,-40.0000000000002,-159.996,-145.670000000002,-105.00000000001,-90.0000000000023,1109.66666666667,-1877.7,-1224,1302.435,-120,-53.6475000000023,180.004999999998,-1877.7,-1224,-1.66666666666288,-7.00000000000114,1302.435,-40.0000000000002,-145.670000000002,180.004999999998,-90.0000000000023,1234,-1877.7,-1224,-273.333333333333,-1.66666666666288,1302.435,-50.1049999999982,-35.5940000000026,-145.670000000002,1234,-1877.7,70.0799999999908,-7.00000000000114,-336.999999999998,1302.435,935.000000000002,-53.6475000000023,9.09494701772928e-13,-35.5940000000026,-159.996,1109.66666666667,-1110,-1224,287.753333333339,-1.66666666666288,1302.435,-50.1049999999982,9.09494701772928e-13,-145.670000000002,93.2499999999991,1234,-1877.7,120.00000000001,-1500,-105.276666666666,1302.435,-24.9999999999986,-40.0000000000002,-159.996,-145.670000000002,1234,-1877.7,-7.00000000000114,1302.435,-120,-53.6475000000023,-35.5940000000026,93.2499999999991,1234,-1877.7,-1110,109.999999999999,287.753333333339,1302.435,-24.9999999999986,-50.1049999999982,-53.6475000000023,-35.5940000000026,-159.996,-145.670000000002,1234,-1877.7,-1224,-105.276666666666,-273.333333333333,1302.435,935.000000000002,-50.1049999999982,-40.0000000000002,-35.5940000000026,-159.996,1234,1109.66666666667,-1877.7,-1500,109.999999999999,-105.276666666666],"predictedBalances":[4122.3,4192.37999999999,3919.04666666666,4206.8,5506.80000000001,5169.80000000001,6472.23500000001,6432.23500000001,6272.23900000001,6126.56900000001,6021.569,5931.569,7041.23566666667,5163.53566666666,3939.53566666666,5241.97066666667,5121.97066666667,5068.32316666666,5248.32816666666,3370.62816666666,2146.62816666666,2144.9615,2137.9615,3440.3965,3400.3965,3254.72649999999,3434.73149999999,3344.73149999999,4578.73149999999,2701.03149999999,1477.03149999999,1203.69816666666,1202.0315,2504.4665,2454.3615,2418.76749999999,2273.09749999999,3507.09749999999,1629.39749999999,1699.47749999999,1692.47749999998,1355.47749999999,2657.91249999999,3592.91249999999,3539.26499999999,3539.26499999999,3503.67099999998,3343.67499999998,4453.34166666665,3343.34166666666,2119.34166666666,2407.09499999999,2405.42833333333,3707.86333333333,3657.75833333333,3657.75833333334,3512.08833333333,3605.33833333333,4839.33833333333,2961.63833333333,3081.63833333334,1581.63833333334,1476.36166666667,2778.79666666667,2753.79666666668,2713.79666666668,2553.80066666668,2408.13066666667,3642.13066666668,1764.43066666667,1757.43066666667,3059.86566666667,2939.86566666667,2886.21816666667,2850.62416666667,2943.87416666667,4177.87416666667,2300.17416666667,1190.17416666667,1300.17416666667,1587.92750000001,2890.36250000001,2865.36250000001,2815.25750000001,2761.61000000001,2726.01600000001,2566.02000000001,2420.35000000001,3654.35000000001,1776.65000000001,552.650000000009,447.373333333343,174.04000000001,1476.47500000001,2411.47500000001,2361.37000000001,2321.37000000001,2285.77600000001,2125.78000000001,3359.78000000001,4469.44666666668,2591.74666666668,1091.74666666668,1201.74666666668,1096.47000000001]};
        send_json(res, dummy);

        // rio.sourceAndEval(__dirname+'file.R', {
        //     entryPoint: 'somethingInsideR'
        //     data: txns,
        //     callback: function(err, response) {
        //         send_json(res, JSON.parse(response));
        //     }
        // });
    });
});

var port = process.env.PORT || 5000;
app.listen(port);
console.log("Listening on port " + port);

// var childProcess = require('child_process'),
// rserve;

// rserve = childProcess.exec('R CMD Rserve --save', function (error, stdout, stderr) {
// if (error) {
// 	console.log(error.stack);
// 	console.log('Error code: '+error.code);
// 	console.log('Signal received: '+error.signal);
// }
// console.log('Child Process STDOUT: '+stdout);
// console.log('Child Process STDERR: '+stderr);
// });

// rserve.on('exit', function (code) {
// console.log('Child process exited with exit code '+code);
// require('rio').evaluate("pi / 2 * 2");
// });
